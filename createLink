#!/usr/bin/env bash
#clear
#export PS4='\033[90m+${LINENO} in ${#BASH_SOURCE[@]}>${FUNCNAME[0]}:${BASH_SOURCE[@]##*/} \033[0m'
#set -x

#echo "starting: $0 <LOG_LEVEL=$1>"

createLink.users()     # <path> <?user1> <?user2>... # A symbolic link is created to the given users' home directory or all users' home directory of the given path+directory # an example
{
  local path="$1"
  if [ -n "$path" ]; then
    shift
    info.log "path is set to $path"
  else
    create.result 1 "path missing. Using: $path"
    exit "$(result)"
  fi

  if check dir "$path" not exists
  then
    create.result 1 "$path does not exist"
    echo "$path does not exist"
    exit "$(result)"
  fi

  local user="$1"
  if [ -n "$all" ]; then
    local allUsers=$(getent passwd | awk -F: '$3>999 && $3 <5000{print $1}')
    allUsers+=' root'
    createLink users $path $allUsers
  else
    if [[ ${path::1} == "/" ]]; then
      path="${path/\/}"
    fi
    if [ -z "$user" ]; then 
      user="$(whoami)"
    fi

    local targetDir="${path%\/*}"

    while [ -n "$user"  ];
    do
      if check user $user exists fix error.log "$user is not a user"
      then
        info.log "user is set to $user"        
        
        if [ $(id -u "$(whoami)") -eq 0 -o "$user" = "root" ]; then
          if [ $(whoami) = "$user" ]; then
            if check dir "/$user" exists
            then
              mkdir -p "/$user/$targetDir"
              ln -s "/$path" --target-directory="/$user/$targetDir"
            else
              mkdir -p "/$targetDir"
              ln -s "/$path" --target-directory="/$targetDir"
            fi
          else
            sudo mkdir -p "/$user/$targetDir"
            sudo ln -s "/$path" --target-directory="/$user/$targetDir"
          fi
        else
          mkdir -p "/home/$user/$targetDir"
          sudo ln -s "/$path" --target-directory="/home/$user/$targetDir"
        fi
        sudo chmod -R 775 "/$path"
        create.result 0 "path is link to $user"
      fi
      shift
      user="$1"
    done
  fi

  return $(result)
}

createLink.for() { # <mode:user> # createLink for either specific users or all users
  debug.log "for"
  RETURN=$1
}

#createLink.for.completion() { 
#  echo "all"
#  echo "user"
#}

createLink.for.completion.mode() { # #
  echo "all"
  echo "user"
}

createLink.all() { # #
  all=true
  RETURN=$1
}

### new.method

createLink.usage()
{
  local this=${0##*/}
  echo "You started" 
  echo "$0

  Usage:
  $this: command   Parameter and Description"
  this.help
  echo "
  
  Examples
    $this v
    $this init
    $this for users /var/dev snet shiftAdmin
    $this for all users /var/dev
    ----------
  "
}

createLink.start()
{
  #echo "sourcing init"
  source this

  # if [ -z "$1" ]; then
  #   status.discover "$@"
  #   return 0
  # fi

  this.start "$@"
}

createLink.start "$@"

