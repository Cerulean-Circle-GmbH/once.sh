#!/bin/bash
#clear
#export PS4='\033[90m+${LINENO} in ${#BASH_SOURCE[@]}>${FUNCNAME[0]}:${BASH_SOURCE[@]##*/} \033[0m'
#set -x

level=$1
if [ -z "$level" ]; then
  level=1
fi
echo "starting: ${BASH_SOURCE[@]##*/} <LOG_LEVEL=$1>"

#echo "sourcing init"
source init
source test.suite

log.level $level



test.case - "scenario.fix dev.wo-da.de.vhost.scnariotest.1blu.de" \
   once scenario.fix dev.wo-da.de.vhost.scnariotest.1blu.de
. ~/.once
RESULT=$ONCE_DEFAULT_SCENARIO
expect 0 "/var/dev/EAMD.ucp/Scenarios/de/1blu/scnariotest/vhost/de/wo-da/dev/EAM/1_infrastructure/Once/latestServer" "current scenario: $ONCE_DEFAULT_SCENARIO"

RESULT=$ONCE_SCENARIO
expect 0 "/var/dev/EAMD.ucp/Scenarios/de/1blu/scnariotest/vhost/de/wo-da/dev" "current scenario: $ONCE_DEFAULT_SCENARIO"

EXPECTED_HOSTNAME=$HOSTNAME

loop.this $EXPECTED_DOMAIN_PATH . reverse silent
EXPECTED_DOMAIN_PATH=$RESULT
warn.log "$RESULT"
loop.this $EXPECTED_DOMAIN_PATH . r / silent
test.case - "scenario.fix" \
   once scenario.fix 

. ~/.once
RESULT=$ONCE_DEFAULT_SCENARIO
expect 0 "/var/dev/EAMD.ucp/Scenarios/$EXPECTED_DOMAIN_PATH/EAM/1_infrastructure/Once/latestServer" "current scenario: $ONCE_DEFAULT_SCENARIO"

