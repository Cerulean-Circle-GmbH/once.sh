@startuml
actor Actor as a
participant state
participant sh
participant "init/oosh" as oosh 
participant "init/deinstall.oosh" as deinstall.oosh 
participant ossh
participant oo
participant bash
participant this

a -> state: state next
group state next
    alt state [0]    = not.installed
    else state [1]    = initialized
    else state [2]    = setup
    else state [3]    = all.states.added
    else state [4]    = started
    else state [11]   = remote.install.started
    else state [12]   = local.install.started
    else state [13]   = priviledges.checked
    else state [20]   = user.rights.only
    else state [21]   = user.installation.done
    else state [22]   = user.mode.release
    else state [23]   = user.mode.dev
    else state [30]   = root.rights
    else state [31]   = root.shared.dev.folder.created
        state -> oo: oo private.check.root.shared.dev.folder.created $script $stageTo $stateFound
        alt as a root
            oo -> oo: return to oo private.check.root.shared.\ndev.folder.created AS USER
        else as user
            oo -> oosh: sudo -S ~/oosh/init/oosh mode user user.$USER $OOSH_SSH_CONFIG_HOST dev # switch to root
            group Install as root from $USER
                    oosh -> bash: "$BASH_FILE" -xc "$OOSH_DIR/this call ossh install.continue.local \n $SSH_CONFIG_FROM_REMOTE \n $SSH_CONFIG_NAME_USED_FOR_LOCAL \n $DEV_MODE"
                    bash -> this: this call ossh install.continue.local \n $SSH_CONFIG_FROM_REMOTE \n $SSH_CONFIG_NAME_USED_FOR_LOCAL \n $DEV_MODE"
                    this -> ossh: ossh install.continue.local \n $SSH_CONFIG_FROM_REMOTE \n $SSH_CONFIG_NAME_USED_FOR_LOCAL \n $DEV_MODE"
                    ossh -> ossh: fix user config
                    ossh -> this: return 0
                    this -> bash: return 0
                    bash -> oosh: return 0
            end
            oosh -> oo: return 0
            alt successful root installation as user 
                oo -> oo: oo private.check.root.shared.\ndev.folder.created as a user
                oo -> oo: link users directories to /home/shared 
            else error.log "could not install root as \n user $USER: $(errno $RETURN_VALUE)"
            end

            oo -> state: return 0; "installed root form user"
        end
    else [32]   = root.dev.keys.installed
    else [33]   = root.installation.done
    else [40]   = user.shared.dev.folder.linked
    else [41]   = user.state.machine.synced.with.root
    else [50]   = headless.setup.started
    else [51]   = headless.setup.finished
    else [60]   = once.setup.started
    else [61]   = once.setup.finished
    else [99]   = finished
    else [6]    = to.be.deleted
    end
end

group Local Installation
    a -> oosh: init/oosh
    oosh -> sh: #!/bin/sh ### shebang
    sh -> bash: bash this localInstall
    bash -> this: this localInstall
    this -> bash: #!/usr/bin/env bash ### shebang
    this -> oo: oo state # initializes the state machine
    this -> user: user get home \n # hack to make sure \n the pm is set
    this -> bash: starts new bash
    bash -> bash: source .bashrc \n [oosh sshConfig] has started > |
end
group Remote Installation

    a -> ossh: ossh install <remoteSSHconfig> 

    ossh -> ossh: private.push.oosh
    ossh -> oosh: init/oosh mode ssh <remoteSSHconfig> \n <localSSHconfig> <localOSSH_MODE>
    alt mode ssh
        oosh -> bash: "$BASH_FILE" -xc "$OOSH_DIR/this call ossh install.continue.local \n $SSH_CONFIG_FROM_REMOTE \n $SSH_CONFIG_NAME_USED_FOR_LOCAL \n $DEV_MODE"
        bash -> this: this call ossh install.continue.local \n $SSH_CONFIG_FROM_REMOTE \n $SSH_CONFIG_NAME_USED_FOR_LOCAL \n $DEV_MODE"
        this -> ossh: ossh install.continue.local \n $SSH_CONFIG_FROM_REMOTE \n $SSH_CONFIG_NAME_USED_FOR_LOCAL \n $DEV_MODE"
        ossh -> this: return 0
        this -> bash: return 0
        bash -> oosh: return 0
    else mode user
        oosh -> bash: "$BASH_FILE" -xc "$OOSH_DIR/this call ossh install.continue.local \n $SSH_CONFIG_FROM_REMOTE \n $SSH_CONFIG_NAME_USED_FOR_LOCAL \n $DEV_MODE"
        bash -> this: this call ossh install.continue.local \n $SSH_CONFIG_FROM_REMOTE \n $SSH_CONFIG_NAME_USED_FOR_LOCAL \n $DEV_MODE"
        this -> ossh: ossh install.continue.local \n $SSH_CONFIG_FROM_REMOTE \n $SSH_CONFIG_NAME_USED_FOR_LOCAL \n $DEV_MODE"
        ossh -> this: return 0
        this -> bash: return 0
        bash -> oosh: return 0
    end
    oosh -> ossh: return 0
    
    ossh -> ossh: ssh $sshConfigHost "bash \n /home/$user/oosh/ossh \n continue.local.install \n from $(ossh.get.url)"
    ossh -> ossh: ossh.install.finish.local <remoteSSHconfig>
end
group Reconfiguration and Exit of oosh
    a -> exit: exit $ERROR_CODE_RECONFIG(defualt is 7)
    exit -> this: this.restart
    alt $RETURN_VALUE = $ERROR_CODE_RECONFIG
        this -> this: this.restart again \n # exited back into this 7
        this -> bash: source .bashrc \n [oosh sshConfig] has started reconfigured > |
    else
        this -> exit: finally exiting oosh \n (in this.start case restart)
    end
end
group Local De-Installation
    a -> deinstall.oosh: init/deinstall.oosh
end
@enduml