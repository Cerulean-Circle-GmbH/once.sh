@startuml
actor Actor as a
participant sh
participant "init/oosh" as oosh 
participant "init/deinstall.oosh" as deinstall.oosh 
participant ossh
participant oo
participant bash
participant this

group Installation from GitHub
    alt curl
    else wget
        a -> sh: env -i sh -c "$(wget -O- https://raw.githubusercontent.com/Cerulean-Circle-GmbH/once.sh/main/init/oosh)"
    else fetch
    end
end
group Local Installation
    a -> oosh: init/oosh
    oosh -> sh: #!/bin/sh ### shebang
    sh -> bash: bash this localInstall
    bash -> this: this localInstall
    this -> bash: #!/usr/bin/env bash ### shebang
    this -> oo: oo state # initializes the state machine
    this -> user: user get home \n # hack to make sure the pm is set
    this -> bash: starts new bash
    bash -> bash: source .bashrc \n [oosh sshConfig] has started > |
end
group Remote Installation

    a -> ossh: ossh install <remoteSSHconfig> 

    ossh -> ossh: private.push.oosh
    ossh -> oosh: init/oosh mode ssh <remoteSSHconfig> <localSSHconfig> <localOSSH_MODE>
    alt mode ssh
        oosh -> bash: "$BASH_FILE" -xc "$OOSH_DIR/this call ossh install.continue.local $SSH_CONFIG_FROM_REMOTE $SSH_CONFIG_NAME_USED_FOR_LOCAL $DEV_MODE"
        bash -> this: this call ossh install.continue.local $SSH_CONFIG_FROM_REMOTE $SSH_CONFIG_NAME_USED_FOR_LOCAL $DEV_MODE"
        this -> ossh: ossh install.continue.local $SSH_CONFIG_FROM_REMOTE $SSH_CONFIG_NAME_USED_FOR_LOCAL $DEV_MODE"
        ossh -> this: return 0
        this -> bash: return 0
        bash -> oosh: return 0
    else mode user
        oosh -> bash: "$BASH_FILE" -xc "$OOSH_DIR/this call ossh install.continue.local $SSH_CONFIG_FROM_REMOTE $SSH_CONFIG_NAME_USED_FOR_LOCAL $DEV_MODE"
        bash -> this: this call ossh install.continue.local $SSH_CONFIG_FROM_REMOTE $SSH_CONFIG_NAME_USED_FOR_LOCAL $DEV_MODE"
        this -> ossh: ossh install.continue.local $SSH_CONFIG_FROM_REMOTE $SSH_CONFIG_NAME_USED_FOR_LOCAL $DEV_MODE"
        ossh -> this: return 0
        this -> bash: return 0
        bash -> oosh: return 0
    end
    oosh -> ossh: return 0
    ossh -> ossh: ossh.install.finish.local <remoteSSHconfig>
end
group Reconfiguration and Exit of oosh
    a -> exit: exit $ERROR_CODE_RECONFIG(defualt is 7)
    exit -> this: this.restart
    alt $RETURN_VALUE = $ERROR_CODE_RECONFIG
        this -> this: this.restart again \n # exited back into this 7
        this -> bash: source .bashrc \n [oosh sshConfig] has started reconfigured > |
    else
        this -> exit: finally exiting oosh (in this.start case restart)
    end
end
group Local De-Installation
    a -> deinstall.oosh: init/deinstall.oosh
end
@enduml