@startuml
actor Actor as a
participant sh
participant "init/oosh" as oosh 
participant "init/deinstall.oosh" as deinstall.oosh 
participant ossh
participant oo
participant bash
participant this

group Installation from GitHub
    alt curl
    else wget
        a -> sh: env -i sh -c "$(wget -O- \nhttps://raw.githubuser\ncontent.com/\nCerulean-Circle-GmbH/\nonce.sh/main/init/oosh)"
    else fetch
    end
end
group Local Installation
    a -> oosh: init/oosh
    oosh -> sh: -#!/bin/sh ### shebang
    activate bash
    sh -> bash: bash this localInstall
    activate this
    bash -> this: this localInstall
    this -> bash: -#!/usr/bin/env bash \n ### shebang
    this -> oo: oo state # initializes the state machine
    activate oo
    oo -> oo: private.init.state.machine
    oo -> state: state machin.create  
    loop state.add 
        oo -> state: state add (all states)  
    end
    oo -> state: state next (all.states.added)
    oo -> state: state machine.start oo
    oo -> state: state next (remote.install.started)
    oo -> this: return
    deactivate oo

    this -> user: user get home \n # hack to make sure \n the pm is set
    this -> bash: starts new bash
    deactivate this

    bash -> bash: source .bashrc \n [oosh sshConfig] has started > |

end
group Reconfiguration and Exit of oosh
    a -> bash: exit $ERROR_CODE_RECONFIG(default is 117)
    destroy bash
    onExit -> this: this.restart
    alt $RETURN_VALUE = $ERROR_CODE_RECONFIG
        this -> this: this.restart again \n # exited back into this 7
        activate bash
        this -> bash: source .bashrc \n [oosh sshConfig] \n has started reconfigured > |
    else
        this -> onExit: finally exiting oosh \n (in this.start: case [restart])
        destroy bash
    end
end
group Remote Installation

    a -> ossh: ossh install <remoteSSHconfig> 
    activate ossh
    ossh -> ossh: private.push.oosh
    ossh -> oosh: init/oosh mode ssh <remoteSSHconfig> \n <localSSHconfig> <localOSSH_MODE>


    alt mode ssh
        activate oosh
        oosh -> bash: "$BASH_FILE" -xc "$OOSH_DIR/this call \n ossh install.continue.local \n $SSH_CONFIG_FROM_REMOTE \n $SSH_CONFIG_NAME_USED_FOR_LOCAL \n $DEV_MODE"
        bash -> this: this call ossh install.continue.local \n $SSH_CONFIG_FROM_REMOTE \n $SSH_CONFIG_NAME_USED_FOR_LOCAL \n $DEV_MODE"
        activate this
        group bootstrap this
            this -> this: set OOSH_DIR
            this -> this: make sure "info.log" exists
            alt this already sourced
                this -> this: return 0
            end
            this -> debug: source debug
            alt check isSourced
            else started
                debug -> this: source this
            end
            debug -> log: source log
            alt check isSourced
            else started
                log -> this: source this
            end
            log -> log: log.start
            alt check LOG_LEVEL
                activate log
            else not set
                log -> log: log.init
                    activate log
                    log -> log: source $CONFIG
                    log -> log: log.init.colors
                    deactivate log
            else ok
                log -> log: log.init.colors
                    activate log
            end

            this -> this: this.init
            alt check config
            else exists
                this -> config: source $CONFIG
            else initialize config
                this -> config: source config
                activate config
                config -> config: config.start
                    activate config
                    config -> this: source this
                    this -> config: return 0 # this already sourced
                    deactivate config
                    
                    config -> config: config.init
                    activate config
                    config -> config: mkdir
                deactivate config
                config -> this: return 0 # config loaded
            end


        end        
        this -> ossh: ossh install.continue.local \n $SSH_CONFIG_FROM_REMOTE \n $SSH_CONFIG_NAME_USED_FOR_LOCAL \n $DEV_MODE"
        activate ossh
        ossh -> this: return 0
        deactivate ossh
        this -> bash: return 0
        deactivate this
        bash -> oosh: return 0

    else mode user
        oosh -> bash: "$BASH_FILE" -xc "$OOSH_DIR/this call ossh \n install.continue.local \n $SSH_CONFIG_FROM_REMOTE \n $SSH_CONFIG_NAME_USED_FOR_LOCAL \n $DEV_MODE"
        bash -> this: this call ossh \n install.continue.local \n $SSH_CONFIG_FROM_REMOTE \n $SSH_CONFIG_NAME_USED_FOR_LOCAL \n $DEV_MODE"
        activate this
        this -> ossh: ossh install.continue.local user.$USER \n $SSH_CONFIG_NAME_USED_FOR_LOCAL \n $DEV_MODE"
        activate ossh
        ossh -> this: return 0
        deactivate ossh
        this -> bash: return 0
        deactivate this
        bash -> oosh: return 0
    end
    oosh -> ossh: return 0
    deactivate oosh

    ossh -> ossh: ossh.install.finish.local \n <remoteSSHconfig>
    ossh -> a: return # back local
    destroy ossh
end

group Local De-Installation
    a -> deinstall.oosh: init/deinstall.oosh
end
@enduml