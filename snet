#!/usr/bin/env bash
#clear
#export PS4='\e[90m+${LINENO} in ${#BASH_SOURCE[@]}>${FUNCNAME[0]}:${BASH_SOURCE[@]##*/} \e[0m'
#set -x

#echo "starting: $0 <LOG_LEVEL=$1>"

### new.method

snet.usage() {
  # <<EOD
  local this=${0##*/}
  echo "You started
$0

  Usage:
  $this: command   description and Parameter

      usage     prints this dialog while it will print the status when there are no parameters
      v         print version information
      init      initializes ...nothing yet

  Examples
    $this v
    $this init
  "
}

snet.docker.service.status() {
  # <<EOD
  service docker status
}

snet.service.install() {
  # <<EOD
  console.log "should write
  /var/dev/EAMD.ucp/Components/org/shift/EAM/2_systems/ShifterNetworkServer/1.0.0/src/systemd/snet.service

  to
  /etc/systemd/system
  "
  cp /var/dev/EAMD.ucp/Components/org/shift/EAM/2_systems/ShifterNetworkServer/1.0.0/src/systemd/snet.service /etc/systemd/system
  chmod 664 /etc/systemd/system/snet.service
  systemctl daemon-reload
  systemctl enable /etc/systemd/system/snet.service
}

snet.install() {
  # <<EOD
  rm $OOSH_DIR/snet
  cd $OOSH_DIR
  ln -s $REPO_DIR/Components/org/shift/EAM/2_systems/ShifterNetworkServer/1.0.0/src/sh/snet
}

snet.update() {
  # <<EOD
  cd $REPO_DIR
  git pull
  snet.service.install
}

snet.service.start() {
  # <<EOD
  once docker.scenario.start psql
  once docker.scenario.start jhipster
  once docker.scenario.start keycloak
  once docker.scenario.start pg
  once start fast

  success.log "SNET Servuces succesfully started

  "
  docker ps
}

snet.service.stop() {
  # <<EOD
  once stop
  once docker.scenario.stop pg
  once docker.scenario.stop jhipster
  once docker.scenario.stop keycloak
  once docker.scenario.stop psql

  success.log "SNET Servuces succesfully stoped

  "
  docker ps
}

snet.service.status() {
  # <<EOD
  docker ps
  once states.list
}

snet.start() {
  # <<EOD
  #echo "sourcing init"
  source this

  # if [ -z "$1" ]; then
  #   status.discover "$@"
  #   return 0
  # fi

  this.start "$@"
}

snet.start "$@"
