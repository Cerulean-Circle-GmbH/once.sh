#!/bin/bash
#clear
#export PS4='\033[90m+${LINENO} in ${#BASH_SOURCE[@]}>${FUNCNAME[0]}:${BASH_SOURCE[@]##*/} \033[0m'
#set -x

#echo "starting: $0 <LOG_LEVEL=$1>"


oo.new()
{
  if [ -n "$1" ]; then
    info.log "oosh in $OOSH_DIR"
    cd $OOSH_DIR
    cat ./templates/code/new_script | sed 's/new_script/'"$1"'/' >./$1
    chmod +x ./$1
    success.log "created oo script $1"
    important.log "to enable completion on the new command, type

    reconfigure"
  else
    warn.log "usage: oo new filename
    
    please specify a filename"
    return 1
  fi
}

oo.new.method()   # oo new.method new_script.new_method 
{
  local name="$1"
  if [ -z "$name" ]; then
    error.log "No parameter provided."
    return 1
  fi
  local new_script=$(echo $name | cut -d. -f1)
  local new_method=$(echo $name | cut -d. -f2)
  
  if [ -z "$new_method" ]; then
    warn.log "check if the parameter contains a ."
    error.lgo "no method name in: $name:"
    return 2
  fi
  console.log "
  command: $new_script
  method : $new_method
  "

  if check file $OOSH_DIR/$new_script exists fix error.log "$OOSH_DIR/$new_script does not exist"
  then
    cat $OOSH_DIR/$new_script | sed 's/### new.method/'$(cat $OOSH_DIR/templates/code/new_method | sed 's/new_script/'$new_script'/' | sed 's/new_method/'$new_method'/')'/'
  fi
}



oo.commit()
{
  cd $OOSH_DIR
  git add *
  git commit
  git push
}

oo.update()
{
  cd $OOSH_DIR
  git pull
}

oo.cmd()
{
  once cmd "$@"
}

oo.pm()
{
  oo.cmd "$@"
}

oo.usage()
{
  local this=${0##*/}
  echo "You started 
$0

  Usage:
  $this: command   description and Parameter

      usage     prints this dialog while it will print the status when tehere are no parameters          
      v         print version information
      init      initializes ...nothing yet  
  
  Examples
    $this v
    $this init
  "
}

oo.start()
{
  #echo "sourcing init"
  source this

  # if [ -z "$1" ]; then
  #   status.discover "$@"
  #   return 0
  # fi

  this.start "$@"
}

oo.start "$@"

