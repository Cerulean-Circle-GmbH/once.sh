#!/bin/bash
#clear
#export PS4='\033[90m+${LINENO} in ${#BASH_SOURCE[@]}>${FUNCNAME[0]}:${BASH_SOURCE[@]##*/} \033[0m'
#set -x

#echo "starting: $0 <LOG_LEVEL=$1>"

once.completion.discover() 
{
  #log.level 6
  declare -a wordlist=($1)
  #echo ${wordlist[*]}

  local command=""
  local maincommand=${wordlist[0]}
  local delegate=""

  let len=${#wordlist[@]}-1
  detail="${wordlist[len]}"
  unset wordlist[len]


  let len=${#wordlist[@]}-1
  last="${wordlist[len]}"
  if [ "$len" -eq "0" ]; then
    last=$detail
    detail=.
    #echo len $len
  else
    unset wordlist[len]
  fi


  for index in ${!wordlist[@]}
  do
    command+="${wordlist[index]}."
    if [ "$index" -gt "0" ]; then
      delegate+="${wordlist[index]}."
    fi
  done
  command+="$last"
  delegate+="$last"
  echo "$detail $command $maincommand $delegate"

  #log.level 3
  return 0
  
  if [ -n "$command" ]; then
    prev="$command"
    shift
    #echo "PREV:$prev"
    if (this.functionExists $maincommand.$command.completion); then
      echo "IN:$maincommand.$command.completion:$detail"
      $maincommand.$prev.completion $detail
      return 0
    fi
    if (this.functionExists $command.completion); then
      echo "IN:$command.completion:$detail"
      $prev.completion $detail
      return 0
    fi
    if [ -f $OOSH_PATH/$maincommand ]; then
      echo IN:maincommand.$command:$detail
      grep "^$command()" $OOSH_PATH/$maincommand | sed 's/^\('$command'.'$detail'\.\)\([^(]*\)\(().*\)/\2/'| sort
      return 0
    fi
  else
    echo "IN:$maincommand:detail:$detail" 
    grep "^$maincommand\.$detail.*()" $OOSH_PATH/once | sed 's/^\('$maincommand'\.\)\([^(]*\)\(().*\)/\2/' | sort
    ls -l "$OOSH_PATH" | grep '^[^d]..x..x..x.*$' | tr -s ' ' | cut -d\  -f9 | grep "^$detail" | sort
  fi
  #log.level 3
  exit 0
}

once.usage()
{
  local this=${0##*/}
  echo "You started 
$0

  Usage:
  $this: command   description and Parameter

      usage     prints this dialog while it will print the status when tehere are no parameters          
      v         print version information
      init      initializes a new user config  
  
  Examples
    $this v
    $this init
  "
}

once.start()
{
  #echo "sourcing init"
  source init

  # if [ -z "$1" ]; then
  #   status.discover "$@"
  #   return 0
  # fi

  this.start "$@"
}

once.start "$@"

