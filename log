#!/bin/bash

export PS4='\033[90m+${LINENO} in ${this}: \033[0m'

log.start()
{
  This=$(which $0)
  this=$(basename $This)


  if [ "$this" = "log" ]; then
    echo "starting $0"
  else
    echo "sourcing $0"
  fi

  if [ -z "$LOG_LEVEL" ]; then
    log.init
  else
    #shellcheck source=/dev/null
    #source ./config
    { 
      set +x 
    } 2>/dev/null
    source $CONFIG
    #LOG_LEVEL_ARRAY=$( IFS=:; printf '%s' "${ENUM_LOG_LEVEL}" )
    LOG_LEVEL_ARRAY=($(loop $ENUM_LOG_LEVEL : r ' ' pipe)) 
    set -x

    echo LOG_LEVEL_ARRAY: "${LOG_LEVEL_ARRAY[@]}"
    echo LOG_LEVEL: "$LOG_LEVEL"
    echo "current log level is ${LOG_LEVEL_ARRAY[$LOG_LEVEL]}"
    
    if [ -n "$1" ]; then
      local cmd=$1
      shift
      log.$cmd "$@"
    fi
  fi
}

log.init()
{
  if [ -n "$LOG_LEVEL" ]; then
    echo "log already inititalized"
  
  echo "debug: ENUM_LOG_LEVEL=$ENUM_LOG_LEVEL"
  echo "debug: LOG_LEVEL_ARRAY=(${LOG_LEVEL_ARRAY[*]})"

    LOG_LEVEL_ARRAY=($(loop $ENUM_LOG_LEVEL : r ' ' pipe)) 

  #  LOG_LEVEL_ARRAY=$( IFS=:; printf '%s' "${ENUM_LOG_LEVEL}" )
    log.status
    return 0
  fi

  LOG_LEVEL_ARRAY=(SILENT ERROR WARN USER INFO DEBUG)
  ENUM_LOG_LEVEL=$( printf '%s:' "${LOG_LEVEL_ARRAY[@]}" )  
  export ENUM_LOG_LEVEL
  export LOG_LEVEL=3
  config save
  log.status
}

log.status()
{
  echo "current log level is ${LOG_LEVEL_ARRAY[$LOG_LEVEL]}"
  echo "debug: ENUM_LOG_LEVEL=$ENUM_LOG_LEVEL"
  echo "debug: LOG_LEVEL_ARRAY=(${LOG_LEVEL_ARRAY[*]})"
}


log.level() 
{
 export LOG_LEVEL=$1
 cut -d: -f $(($LOG_LEVEL+1)) <(echo $ENUM_LOG_LEVEL)
 config save
}

debug.log()
{
  echo -e "- $@"
}



log.start "$@"
