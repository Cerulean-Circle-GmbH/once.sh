#!/usr/local/bin/bash

# clear
# export PS4='\033[90m+${LINENO} in ${#BASH_SOURCE[@]}>${FUNCNAME[0]}:${BASH_SOURCE[@]##*/} \033[0m'
# set -x

#echo "starting: $0 <LOG_LEVEL=$1>"
if ! [ "$(type -t info.log)" = "function" ]; then
  source init; 
fi  

check.usage()
{
  local this=${0##*/}
  echo "You started 
$0

  Usage:
  $this: command   description and parameter
      argument      checks \$1
      function      initializes a new user config
      file          checks if \$FILE   
  
      parameter
        name        name of argument, file or function
        condition   one of exists, readable, ...
  Examples
    $this message 
    $this file ./test.debug exists fix no.test.debug
    $this argument exists
  "
}

check.condition() {
  if ($condition); then
    if [ -z "$CHECK_MESSAGE" ]; then
      $CHECK_MESSAGE_LEVEL.log "$CHECK_MESSAGE"
    fi
  else
    if [ -z "$CHECK_FIX_METHOD" ]; then
      if [ -z "$CHECK_MESSAGE" ]; then
        $CHECK_MESSAGE_LEVEL.log "$CHECK_MESSAGE"
      fi
      $CHECK_FIX_METHOD "$@"
    fi
  fi
}

check.message()
{
  local level=$1
  if (this.functionExists $level.log); then
    CHECK_MESSAGE_LEVEL=$1
    CHECK_MESSAGE=$2 
    shift
    shift
  else
    CHECK_MESSAGE_LEVEL="console"
    CHECK_MESSAGE=$1
    shift
  fi
  RETURN=$1
}

check.file()
{
  FILE=$1
  if [ -z "$FILE" ]; then
    error.log "check.file: no file specified"
  else
    shift
  fi
  RETURN=$1
}

check.fix()
{
  local level=$1
  if (this.functionExists $level.log); then
    CHECK_FIX_MESSAGE_LEVEL=$1
    CHECK_FIX_MESSAGE=$2 
    shift
    shift
  else
    CHECK_FIX_MESSAGE_LEVEL="console"
    CHECK_FIX_MESSAGE=$1
    shift
  fi
  
  if (this.functionExists $1); then
    important.log "fixing with: $@"
  fi

  RETURN=$1
}


check.start()
{
  this.start "$@"
}

check.start "$@"

