#!/bin/bash
#clear
#export PS4='\033[90m+${LINENO} in ${#BASH_SOURCE[@]}>${FUNCNAME[0]}:${BASH_SOURCE[@]##*/} \033[0m'
#set -x

#echo "starting: $0 <LOG_LEVEL=$1>"


replace.by()
{
  REPLACE_EXPRESSION="$1"
  cat "$FILE" |  sed 's/'"$SEARCH_EXPRESSION"'/'"$REPLACE_EXPRESSION"'/' >"$FILE".new
}

replace.in()
{
  FILE="$1"
  shift
  SEARCH_EXPRESSION=$1
  shift
  RETURN=$1

}
replace.diff()
{
 FILE="$1"
 diff "$FILE" "$FILE.new"
}

replace.commit()
{
  FILE="$1"
  check file "$FILE.bak" not exists call rm "$FILE.bak"
  chmod -x "$FILE"
  mv "$FILE" "$FILE.bak"
  mv "$FILE.new" "$FILE"
  chmod +x "$FILE"
}

replace.rollback()
{
  FILE="$1"
  if [ -f "$FILE.new" ]; then
    rm "$FILE"
  else
    mv "$FILE" "$FILE.new"
    mv "$FILE.bak" "$FILE"
    chmod +x "$FILE"
  fi

}

replace.cleanup()
{
  rm *.bak
  rm *.new
} 




replace.usage()
{
  local this=${0##*/}
  echo "You started 
$0

  Usage:
  $this: in filename expressin by relpaceExpression

      usage     prints this dialog while it will print the status when tehere are no parameters          
      v         print version information
      commit    filename
      rollback  filename
      diff      filename

  
  Examples
    $this v
    $this init
  "
}

replace.start()
{
  #echo "sourcing init"
  source this

  # if [ -z "$1" ]; then
  #   status.discover "$@"
  #   return 0
  # fi

  this.start "$@"
}

replace.start "$@"

