#!/bin/bash

# echo "entering: ${BASH_SOURCE[0]}"
# echo "remove all echos to preseve output"
# echo ""

this.functionExists()
{

  local startFunc="$1"
  shift
  RETURN=$1

  if [ "$(type -t $startFunc)" = "function" ]; then
    #info.log "$startFunc exists"
    return 0
  else
    #info.log "$startFunc does not exist"
    return 1
  fi  
}

this.load() 
{
  local aFunction=$1
  shift
  local aShellScript=$1
  shift

  if (this.functionExists $aFunction) ; then
    debug.log "$aShellScript was already sourced"
  else
    source $aShellScript
  fi
  RETURN=$1
}

if (this.functionExists this.init) ; then
  echo "init was already sourced"
  return 0
fi

this.init()
{
  info.log "inititlized"
  local initStartPath=$(dirname $(readlink -f "${BASH_SOURCE[0]}"))
  echo initStartPath $initStartPath
  export PATH=$initStartPath:$PATH
  loop list PATH
}
this.load step debug

this.call() 
{

  local aShellScript=$1
  shift
  local aFunction=$1
  shift

  if (this.functionExists $aFunction) ; then
    $aFunction "$@"
  else
    this.load $aFunction $aShellScript
    $aFunction "$@"
  fi
  RETURN=$1
}

this.isSourced()
{
  len=${#BASH_LINENO[@]}
  depth=1

  info.log "Functions: ${FUNCNAME[@]}"
  info.log "bash source: ${BASH_SOURCE[@]}"
  info.log len=$len, depth=$depth
  info.log "check: ${FUNCNAME[1]}"

  if [ "${FUNCNAME[1]}" = "main" ]; then
    info.log "mode starting ${FUNCNAME[@]} in ${BASH_SOURCE[0]##*/} from ${BASH_SOURCE[$len-1]##*/}"
    return 1
  else
    info.log "mode sourcing ${BASH_SOURCE[0]##*/} from ${BASH_SOURCE[$len-1]##*/}" 
    return 0
  fi
}


info.log "
still in ${BASH_SOURCE[0]##*/}
"

if (this.isSourced); then
 important.log "init was sourced"
 this.init
else
 important.log "init was started"
 this.init
 warn.log "starting new configured Bash"
 bash
 stop.log "back after closing bash. now in shell level $SHLVL"
fi